#!/usr/bin/env bash

# -----------------------------------------------------------------------------

# Copyright (c) 2016 Neil Smith <smith.neil.h@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# -----------------------------------------------------------------------------

# dont-panic is a wholly remarkable script - perhaps the most remarkable,
# certainly the most successful script to ever come out of the great
# publishing corporations of Ursa Minor. More popular than the Celestial
# Homecare Omnibus, better selling than 53 More Things to Do in
# Zsh, and more controversial than Oolon Colluphid's trilogy of
# philosophical blockbusters - Where Linus Went Wrong, Some More of Linus'
# Greatest Mistakes, and Who is This Linus Person Anyway? It's already
# supplanted the Encyclopedia Galactica as the standard repository of all
# knowledge and wisdom for two important reasons. First it's slightly
# cheaper. And second, it has the words "Don't Panic" printed in large,
# friendly letters on it's cover.

# -----------------------------------------------------------------------------

script_descrip="A CLI Bash program used to display system information at shell startup."
script_version="0.0.1"

#################
# Display helpers
#################

display_version() {
    printf "Dont Panic - Version ${script_version}\n"
    printf "Created by and licensed to Neil Smith <smith.neil.h@gmail.com>\n"
    exit 0
}

display_help() {
    printf "$(basename "$0") -- $script_descrip\n\n"
    printf "Usage:\n"
    printf "$(basename "$0") [-h] [-v]\n"
    exit 0
}

display_error() {
    printf "$1\n" >&2
    exit $2
}


#######
# Flags
#######

case $1 in
    --help) display_help; exit 0 ;;
    --version) display_version; exit 0 ;;
esac

while getopts ":hv" flags; do
    case $flags in
        h) display_help; exit 0 ;;
        v) display_version; exit 0 ;;
        \?) display_error "Invalid option: -$OPTARG" 1 ;;
        :) display_error "Option -$OPTARG requires an argument" 1 ;;
    esac
done
